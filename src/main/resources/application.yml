server:
  port: ${PORT:8080}
  servlet:
    context-path: /api/manager

spring:
  cloud:
    aws:
      sqs:
        endpoint: ${AWS_SQS_ENDPOINT}
        client-notification-queue: ${CLIENT_NOTIFICATION_QUEUE}
        email-domain-event-listener: ${EMAIL_DOMAIN_EVENT_LISTENER}
      sns:
        endpoint: ${AWS_SNS_ENDPOINT}
        sent-email-topic: ${SENT_EMAIL_TOPIC}
  output:
    ansi:
      enabled: ALWAYS
  application:
    name: register-part
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_NAME}
    username: ${DB_USER}
    password: ${DB_PASSWORD}
  jpa:
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        default_schema: ${SCHEMA_NAME}
    show-sql: false
    database: postgresql
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    generate-ddl: true
    open-in-view: false

file-manager:
  base-url: ${BASE_URL}
  upload: ${UPLOAD_URI}
  download: ${DOWNLOAD_URI}

verify-user-callback-url: ${VERIFY_USER_CALLBACK_URL}
authentication-service-url: ${AUTHENTICATION_SERVICE_URL}

reset-password:
  server-secret: ${FORGOT_PASSWORD_SECRET}
  server-integer: ${FORGOT_PASSWORD_INTEGER}
  redirect-url: ${RESET_PASSWORD_REDIRECT_URL}

aws:
  access-key: ${ACCESS_KEY}
  secret-key: ${SECRET_KEY}
  endpoint: ${AWS_ENDPOINT}
  region: ${AWS_REGION}